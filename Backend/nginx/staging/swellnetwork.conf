upstream swellnetwork {
  server swellnetwork:3000;
}

server {
  listen 80;
  server_name backend.swellnetwork.io;
  location ^~ /.well-known/acme-challenge/ {
    default_type "text/plain";
    root /var/www/letsencrypt;
  }
  return 301 https://backend.swellnetwork.io$request_uri;
}

server {
  listen 80;
  server_name main.swellnetwork.io;
  location ^~ /.well-known/acme-challenge/ {
    default_type "text/plain";
    root /var/www/letsencrypt;
  }
  return 301 https://main.swellnetwork.io$request_uri;
}

server {
  listen 443 ssl;
  server_name backend.swellnetwork.io;

  ssl_certificate /etc/letsencrypt/live/backend.swellnetwork.io/fullchain.pem;
  ssl_certificate_key /etc/letsencrypt/live/backend.swellnetwork.io/privkey.pem;

  ssl_prefer_server_ciphers On;
  ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
  ssl_ciphers ECDH+AESGCM:DH+AESGCM:ECDH+AES256:DH+AES256:ECDH+AES128:DH+AES:ECD;

  location / {
    proxy_pass                          http://swellnetwork;
    proxy_set_header  X-Real-IP         $remote_addr; # pass on real client's IP
    proxy_set_header  X-Forwarded-For   $proxy_add_x_forwarded_for;
    proxy_set_header  X-Forwarded-Proto $scheme;
    proxy_read_timeout 86400;

    proxy_set_header Host $http_host;
    proxy_redirect off;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "Upgrade";
  }

  location ^~ /.well-known/acme-challenge/ {
    default_type "text/plain";
    root /var/www/letsencrypt;
  }
}
